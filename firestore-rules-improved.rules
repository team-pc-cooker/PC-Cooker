rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ✅ Public read access for PC components (like processors, RAM, etc.)
    match /components/{componentId} {
      allow read: if true;  // Anyone can read components
      // Only allow write operations from authenticated users (for admin panel)
      allow write: if request.auth != null;
    }

    // ✅ Legacy support for pc_components collection
    match /pc_components/{category} {
      allow read: if true;
      // Only allow write operations from authenticated users (for admin panel)
      allow write: if request.auth != null;

      match /items/{itemId} {
        allow read: if true;
        // Only allow write operations from authenticated users (for admin panel)
        allow write: if request.auth != null;
      }
    }

    // ✅ User builds collection
    match /user_builds/{buildId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // ✅ Secure access to user-specific data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      match /addresses/{addressId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      match /orders/{orderId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      match /cart/{cartItemId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // ✅ Orders collection (if you store orders separately)
    match /orders/{orderId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // ✅ Cart collection (if you store cart separately)
    match /carts/{cartId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // ✅ Admin panel access (if you have admin users)
    match /admin/{document=**} {
      allow read, write: if request.auth != null && 
        (request.auth.token.admin == true || request.auth.uid in ['your-admin-uid-here']);
    }

    // ✅ Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 